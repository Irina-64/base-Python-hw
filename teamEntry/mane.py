import json

class User:
    def __init__(self, user_id, name):
        self.__id = user_id
        self.__name = name
        self.__access_level = 'user'

    # –ì–µ—Ç—Ç–µ—Ä—ã
    def get_id(self):
        return self.__id

    def get_name(self):
        return self.__name

    def get_access_level(self):
        return self.__access_level

    # –°–µ—Ç—Ç–µ—Ä—ã
    def set_name(self, name):
        self.__name = name

    def to_dict(self):
        return {
            'id': self.__id,
            'name': self.__name,
            'access_level': self.__access_level
        }

    @staticmethod
    def from_dict(data):
        user = User(data['id'], data['name'])
        return user


class Admin(User):
    def __init__(self, user_id, name):
        super().__init__(user_id, name)
        self.__admin_access_level = 'admin'

    def get_admin_access_level(self):
        return self.__admin_access_level

    def add_user(self, user_list, user):
        if isinstance(user, User):
            user_list.append(user)
            print(f"[+] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{user.get_name()}' –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("[!] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å: –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º User.")

    def remove_user(self, user_list, user_id):
        for user in user_list:
            if user.get_id() == user_id:
                user_list.remove(user)
                print(f"[-] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} —É–¥–∞–ª—ë–Ω.")
                return
        print(f"[!] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    def to_dict(self):
        return {
            'id': self.get_id(),
            'name': self.get_name(),
            'access_level': self.__admin_access_level
        }

    @staticmethod
    def from_dict(data):
        return Admin(data['id'], data['name'])


# --- –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ ---
def save_users(user_list, filename='users.json'):
    data = [u.to_dict() for u in user_list]
    with open(filename, 'w') as f:
        json.dump(data, f, indent=4)
    print("[üíæ] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")


def load_users(filename='users.json'):
    try:
        with open(filename, 'r', encoding="utf-8") as f:
            data = json.load(f)
        users = []
        for item in data:
            if item['access_level'] == 'admin':
                users.append(Admin.from_dict(item))
            else:
                users.append(User.from_dict(item))
        print("[üì•] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
        return users
    except FileNotFoundError:
        print("[‚ö†Ô∏è] –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.")
        return []


# --- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ---
def authorize(user_list, name):
    for user in user_list:
        if user.get_name() == name:
            return user
    return None


# --- –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ---
if __name__ == "__main__":
    users = load_users()

    print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
    login_name = input("–ò–º—è: ")
    current_user = authorize(users, login_name)

    if current_user:
        print(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {current_user.get_name()}! –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: {current_user.get_access_level()}")
        if isinstance(current_user, Admin):
            while True:
                print("\n1. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n2. –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n3. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö\n4. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏")
                choice = input("–í—ã–±–æ—Ä: ")
                if choice == '1':
                    new_id = int(input("ID –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "))
                    new_name = input("–ò–º—è: ")
                    users.append(User(new_id, new_name))
                elif choice == '2':
                    del_id = int(input("ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "))
                    current_user.remove_user(users, del_id)
                elif choice == '3':
                    for u in users:
                        print(f"- {u.get_name()} ({u.get_access_level()})")
                elif choice == '4':
                    save_users(users)
                    break
        else:
            print("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
    else:
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
